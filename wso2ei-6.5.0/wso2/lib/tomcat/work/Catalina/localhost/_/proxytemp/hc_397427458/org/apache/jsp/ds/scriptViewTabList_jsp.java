/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-10-02 06:15:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ds;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.AxisFault;
import org.apache.axis2.context.ConfigurationContext;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.CarbonError;
import org.wso2.carbon.dataservices.ui.DataServiceAdminClient;
import org.wso2.carbon.dataservices.ui.UIutils;
import org.wso2.carbon.dataservices.ui.stub.admin.core.xsd.PaginatedTableInfo;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.owasp.encoder.Encode;

public final class scriptViewTabList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1563972902000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1563972902000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fresourceBundle_005fprevKey_005fparameters_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnextKey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fresourceBundle_005fprevKey_005fparameters_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnextKey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fresourceBundle_005fprevKey_005fparameters_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnextKey_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      //  carbon:breadcrumb
      org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
      boolean _jspx_th_carbon_005fbreadcrumb_005f0_reused = false;
      try {
        _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
        _jspx_th_carbon_005fbreadcrumb_005f0.setParent(null);
        // /ds/scriptViewTabList.jsp(32,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("Select the tables");
        // /ds/scriptViewTabList.jsp(32,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.dataservices.ui.i18n.Resources");
        // /ds/scriptViewTabList.jsp(32,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
        // /ds/scriptViewTabList.jsp(32,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
        int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
        if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
        _jspx_th_carbon_005fbreadcrumb_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fbreadcrumb_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fbreadcrumb_005f0_reused);
      }
      out.write("\n");
      out.write(" <script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("     function get_check_tableList() {\n");
      out.write("        var maxChecked =0;\n");
      out.write("        var selectedTables =\"\";\n");
      out.write("         if (document.getElementById(\"tableList\")) {\n");
      out.write("             for (var i=0; i < document.dataForm.tableList.length; i++) {\n");
      out.write("               if (document.dataForm.tableList[i].checked) {\n");
      out.write("                       selectedTables=selectedTables+\":\" +document.dataForm.tableList[i].value;\n");
      out.write("               }\n");
      out.write("            }\n");
      out.write("         }\n");
      out.write("        return selectedTables;\n");
      out.write("     }\n");
      out.write("\n");
      out.write("     function set_check_tableList(obj){\n");
      out.write("         var checkstate = false;\n");
      out.write("        if (obj.checked){\n");
      out.write("             checkstate = true;\n");
      out.write("        }\n");
      out.write("        jQuery.ajax({\n");
      out.write("        data: \"checkedValue=\"+obj.value+\"&checked=\"+checkstate,\n");
      out.write("        url: \"setSession.jsp\",\n");
      out.write("        context: document.body,\n");
      out.write("        success: function(){\n");
      out.write("\n");
      out.write("        }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("     var allServicesSelected = false;\n");
      out.write("    function selectAll(isSelected) {\n");
      out.write("        allServicesSelected = false;\n");
      out.write("        if (document.dataForm.tableList != null &&\n");
      out.write("            document.dataForm.tableList[0] != null) { // there is more than 1 service\n");
      out.write("            if (isSelected) {\n");
      out.write("                for (var j = 0; j < document.dataForm.tableList.length; j++) {\n");
      out.write("                    document.dataForm.tableList[j].checked = true;\n");
      out.write("                }\n");
      out.write("            } else {\n");
      out.write("                for (j = 0; j < document.dataForm.tableList.length; j++) {\n");
      out.write("                    document.dataForm.tableList[j].checked = false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        } else if (document.dataForm.tableList != null) { // only 1 service\n");
      out.write("            document.dataForm.tableList.checked = isSelected;\n");
      out.write("        }\n");
      out.write("        //return false;\n");
      out.write("        var flag = \"\";\n");
      out.write("        if (isSelected) {\n");
      out.write("            flag = \"selectAllTables\";\n");
      out.write("        } else {\n");
      out.write("            flag = \"selectNoneTables\";\n");
      out.write("        }\n");
      out.write("        jQuery.ajax({\n");
      out.write("        data: \"flag=\"+flag,\n");
      out.write("        url: \"setSession.jsp\",\n");
      out.write("        context: document.body,\n");
      out.write("        success: function(){\n");
      out.write("\n");
      out.write("        }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("</script>\n");

     String[] schemaList = null;
	 boolean isBack = request.getParameter("flag") != null;
     String tableNames="";
     String sourceId = (String)session.getAttribute("datasource");
     String dbName  = (String)session.getAttribute("dbName");
     String parameters = "";
     String[]tableList = null;
     String tableListSession[] = null;
    if (session.getAttribute("selectedTables") != null && !session.getAttribute("selectedTables").equals("")) {
       tableListSession = session.getAttribute("selectedTables").toString().split(":");
    }
     String[]totalSchemaList = null;
     String[]totalSchemaListNew = null;

    String pageNumberStr = request.getParameter("pageNumber");
    if (pageNumberStr == null) {
        pageNumberStr = "0";
    }
    int pageNumber = 0;
    int numberOfPages = 0;
    try {
        pageNumber = Integer.parseInt(pageNumberStr);
    } catch (NumberFormatException ignored) {
        // page number format exception
    }
    PaginatedTableInfo paginatedTableInfo;

    //selectedTableList = (String[])session.getAttribute("tableList");
     if ((isBack)) {
         
    	   tableListSession = (String[])session.getAttribute("tableList");
    	   schemaList = (String[])session.getAttribute("schemaList");
    	   String[] newschemaList = request.getParameterValues("schemaList");

         String schemaName = request.getParameter("schemaName"); // schema name has provided through text field.
             if (schemaName != null && !schemaName.equals("")) {
                 newschemaList[0] = schemaName.trim() ;
             }

    	   // check if schema is changed by going back
    	   boolean isChanged = true;
    	   if( (newschemaList != null ) && (schemaList.length == newschemaList.length)) {
    		   for (int i = 0; i< schemaList.length; i++) {
    			   if(schemaList[i].equals(newschemaList[i])) {
    				   isChanged = false;
    			   }
    		   }
    	   }
    	   // if direction is comming from service mode
    	   if (request.getParameter("flag").equals("back")) {
    		   isChanged = false;
    	   }
    	   //if schema is changed
    	   if (isChanged) {
    		   tableListSession = null;
    		   schemaList = newschemaList;
               session.setAttribute("schemaList", schemaList);
    	   }

    } else {
         schemaList = request.getParameterValues("schemaList");
         if (schemaList == null && session.getAttribute("schemaList") != null && !session.getAttribute("schemaList").equals("")) {   //click paginate next
             schemaList = (String[]) session.getAttribute("schemaList");
         }
         String schemaName = request.getParameter("schemaName"); // schema name has provided through text field.
         if (schemaName != null && !schemaName.equals("")) {
             schemaList[0] = schemaName.trim() ;
         }
         session.setAttribute("schemaList", schemaList);
    }

    try {
        String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
        ConfigurationContext configContext =
                (ConfigurationContext) config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
        String cookie = (String) session.getAttribute(org.wso2.carbon.utils.ServerConstants.ADMIN_SERVICE_COOKIE);
        DataServiceAdminClient client = new DataServiceAdminClient(cookie, backendServerURL, configContext);
        paginatedTableInfo = client.getPaginatedTableInfo(pageNumber, sourceId, dbName, schemaList);
        totalSchemaList = paginatedTableInfo.getTableInfo();
        totalSchemaListNew = client.getTableInfo(sourceId, dbName, schemaList);
        numberOfPages = paginatedTableInfo.getNumberOfPages();
        session.setAttribute("TotalList", totalSchemaListNew);
        //session.setAttribute("selectedTables",totalSchemaListNew); //initially all tables are selected by default.
    } catch (Exception e) {
        CarbonError carbonError = new CarbonError();
        carbonError.addError("Error occurred while saving data service configuration.");
        request.setAttribute(CarbonError.ID, carbonError);
    }



      out.write("\n");
      out.write("<!-- logic to have multiple pages -->\n");
      out.write(" ");
      //  carbon:paginator
      org.wso2.carbon.ui.taglibs.Paginator _jspx_th_carbon_005fpaginator_005f0 = (org.wso2.carbon.ui.taglibs.Paginator) _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fresourceBundle_005fprevKey_005fparameters_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnextKey_005fnobody.get(org.wso2.carbon.ui.taglibs.Paginator.class);
      boolean _jspx_th_carbon_005fpaginator_005f0_reused = false;
      try {
        _jspx_th_carbon_005fpaginator_005f0.setPageContext(_jspx_page_context);
        _jspx_th_carbon_005fpaginator_005f0.setParent(null);
        // /ds/scriptViewTabList.jsp(194,1) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setPageNumber(1);
        // /ds/scriptViewTabList.jsp(194,1) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setNumberOfPages(1);
        // /ds/scriptViewTabList.jsp(194,1) name = page type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setPage("scriptViewTabList.jsp");
        // /ds/scriptViewTabList.jsp(194,1) name = pageNumberParameterName type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setPageNumberParameterName("pageNumber");
        // /ds/scriptViewTabList.jsp(194,1) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setResourceBundle("org.wso2.carbon.service.mgt.ui.i18n.Resources");
        // /ds/scriptViewTabList.jsp(194,1) name = prevKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setPrevKey("prev");
        // /ds/scriptViewTabList.jsp(194,1) name = nextKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setNextKey("next");
        // /ds/scriptViewTabList.jsp(194,1) name = parameters type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_carbon_005fpaginator_005f0.setParameters(parameters);
        int _jspx_eval_carbon_005fpaginator_005f0 = _jspx_th_carbon_005fpaginator_005f0.doStartTag();
        if (_jspx_th_carbon_005fpaginator_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fresourceBundle_005fprevKey_005fparameters_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnextKey_005fnobody.reuse(_jspx_th_carbon_005fpaginator_005f0);
        _jspx_th_carbon_005fpaginator_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fpaginator_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fpaginator_005f0_reused);
      }
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"js/ui-validations.js\"></script>\n");
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      boolean _jspx_th_fmt_005fbundle_005f0_reused = false;
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /ds/scriptViewTabList.jsp(201,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.dataservices.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fbundle_005f0);
          }
          do {
            out.write("\n");
            out.write("\n");
            out.write("    <div id=\"middle\">\n");
            out.write("        <h2>Customize Service Generation</h2>\n");
            out.write("        <form action=\"scriptServiceGeneratingMode.jsp\" method=\"post\" name=\"dataForm\">\n");
            out.write("           <div id=\"workArea\">\n");
            out.write("               <table>\n");
            out.write("                <tr>\n");
            out.write("                <td>\n");
            out.write("                    <a href=\"#\" onclick=\"selectAll(true);return false;\"  style=\"cursor:pointer\">Select all</a>&nbsp<b>|</b>&nbsp;\n");
            out.write("                </td>\n");
            out.write("                <td>\n");
            out.write("                    <a href=\"#\" onclick=\"selectAll(false);return false; \"  style=\"cursor:pointer\">Select none</a>\n");
            out.write("                </td>\n");
            out.write("                </tr>\n");
            out.write("                </table>\n");
            out.write("                <table class=\"styledLeft\">\n");
            out.write("                    <thead>\n");
            out.write("                        <tr>\n");
            out.write("                            <th colspan=\"2\">Select Table(s)</th>\n");
            out.write("                        </tr>\n");
            out.write("                        </thead>\n");
            out.write("                        ");
     if (totalSchemaListNew!= null){
            out.write("\n");
            out.write("                        <tr><td>\n");
            out.write("                            <table class=\"normal\">\n");
            out.write("                                <div style=\"overflow: auto; height: 10px; width: 10%;\">\n");
            out.write("                                    ");

                                        int columns = 3;
                                        int rows = totalSchemaList.length / columns + 1;
                                        int y = 0;
                                        int x = totalSchemaList.length;

                                        for (int i=0; i < rows ; i++){
                                            int count=0;
                                            for (int j=0; j < columns; j++) {
                                                boolean isSelected = false;
                                                tableNames = tableNames + totalSchemaList[y] + ":";
                                                if (tableListSession != null){
                                                    for (String sessionTableName:tableListSession) {
                                                        if(sessionTableName.equals(totalSchemaList[y])) {
                                                             isSelected = true;
                                                         }
                                                    }
                                                    if (isSelected) {
                                            
            out.write("\n");
            out.write("                                            <td></td>\n");
            out.write("                                            <td></td>\n");
            out.write("                                            <td><input type=\"checkbox\" id=\"");
            out.print( totalSchemaList[y]);
            out.write("\"\n");
            out.write("                                                       name=\"tableList\" onclick=\"set_check_tableList(this)\"\n");
            out.write("                                                       value=");
            out.print( totalSchemaList[y]);
            out.write("  CHECKED></td>\n");
            out.write("                                            <td>");
            out.print( totalSchemaList[y]);
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            ");
 } else { 
            out.write("\n");
            out.write("                                               <td></td>\n");
            out.write("                                                <td></td>\n");
            out.write("                                                <td><input type=\"checkbox\" id=\"");
            out.print( totalSchemaList[y]);
            out.write("\"\n");
            out.write("                                                           name=\"tableList\" onclick=\"set_check_tableList(this)\"\n");
            out.write("                                                           value=");
            out.print( totalSchemaList[y]);
            out.write("></td>\n");
            out.write("                                                <td>");
            out.print( totalSchemaList[y]);
            out.write("\n");
            out.write("                                                </td>\n");
            out.write("                                            ");
 } 
            out.write("\n");
            out.write("                                            ");
 } else {
                                                 
            out.write("\n");
            out.write("                                               ");
 if(totalSchemaList[y] != null) {
            out.write("\n");
            out.write("                                                    <td></td>\n");
            out.write("                                                    <td></td>\n");
            out.write("                                                    <td><input type=\"checkbox\" id=\"");
            out.print( totalSchemaList[y]);
            out.write("\"\n");
            out.write("                                                               name=\"tableList\" onclick=\"set_check_tableList(this)\"\n");
            out.write("                                                               value=");
            out.print( totalSchemaList[y]);
            out.write(" CHECKED></td>\n");
            out.write("                                                    <td>");
            out.print( totalSchemaList[y]);
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                                    <td colspan=\"2\">");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                                                    ");
 } }
            out.write("\n");
            out.write("                                            ");

                                                count++;
                                                if (count == columns) {
                                                    count = 1;
                                            
            out.write("\n");
            out.write("                                            <tr></tr>\n");
            out.write("                                            ");

                                                }
                                                y++;
                                                if (y == x) {
                                                    break;
                                                }
                                            }
                                            if (y == x){
                                                break;
                                            }
                                        }
                                    
            out.write("\n");
            out.write("                                    </div>\n");
            out.write("                                 </table>\n");
            out.write("                            </td></tr>\n");
            out.write("                              ");
 } else { 
            out.write("\n");
            out.write("                              <tr><td>\n");
            out.write("                                   ");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                              </td></tr>\n");
            out.write("                              ");
 } 
            out.write("\n");
            out.write("                    ");
            //  carbon:paginator
            org.wso2.carbon.ui.taglibs.Paginator _jspx_th_carbon_005fpaginator_005f1 = (org.wso2.carbon.ui.taglibs.Paginator) _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnobody.get(org.wso2.carbon.ui.taglibs.Paginator.class);
            boolean _jspx_th_carbon_005fpaginator_005f1_reused = false;
            try {
              _jspx_th_carbon_005fpaginator_005f1.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fpaginator_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /ds/scriptViewTabList.jsp(301,20) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPageNumber(pageNumber);
              // /ds/scriptViewTabList.jsp(301,20) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setNumberOfPages(numberOfPages);
              // /ds/scriptViewTabList.jsp(301,20) name = page type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPage("scriptViewTabList.jsp");
              // /ds/scriptViewTabList.jsp(301,20) name = pageNumberParameterName type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPageNumberParameterName("pageNumber");
              int _jspx_eval_carbon_005fpaginator_005f1 = _jspx_th_carbon_005fpaginator_005f1.doStartTag();
              if (_jspx_th_carbon_005fpaginator_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnobody.reuse(_jspx_th_carbon_005fpaginator_005f1);
              _jspx_th_carbon_005fpaginator_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fpaginator_005f1, _jsp_getInstanceManager(), _jspx_th_carbon_005fpaginator_005f1_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"buttonRow\">\n");
            out.write("                             ");
 if (schemaList!= null){
            out.write("\n");
            out.write("                             <input class=\"button\" type=\"button\" value=\"< ");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"  onclick=\"javascript:location.href = 'scriptViewSchemas.jsp?ordinal=1&tableList='+get_check_tableList()+'&flag=back';\" />\n");
            out.write("           \t\t\t\t\t ");
 } else { 
            out.write("\n");
            out.write("           \t\t\t\t\t <input class=\"button\" type=\"button\" value=\"< ");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\" onclick=\"location.href = 'scriptAddSource.jsp?ordinal=1&flag=back&datasource=");
            out.print(Encode.forHtmlAttribute(sourceId));
            out.write("&dbName=");
            out.print(Encode.forHtmlAttribute(dbName));
            out.write("' \"/>\n");
            out.write("                             ");
 } 
            out.write("\n");
            out.write("                              ");
 if (totalSchemaList!= null){
                              
            out.write("\n");
            out.write("\n");
            out.write("                             <input class=\"button\" type=\"button\"  value=\"");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" >\"  onclick=\"gotonext()\"/>\n");
            out.write("                             ");
 }
                             
            out.write("\n");
            out.write("\n");
            out.write("                           <input class=\"button\" type=\"button\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("\t\t\t\t\t\t\tonclick=\"location.href = '../service-mgt/index.jsp'\" />\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                </table>\n");
            out.write("               <script type=\"text/javascript\">\n");
            out.write("    function gotonext(){\n");
            out.write("        if (validateTableSelection('");
            out.print(tableNames);
            out.write("')) {\n");
            out.write("              location.href = 'scriptServiceGeneratingMode.jsp';\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("</script>\n");
            out.write("\n");
            out.write("         </div>\n");
            out.write("       </form>\n");
            out.write("    </div>\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        _jspx_th_fmt_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fbundle_005f0_reused);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(273,68) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("empty.database");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(298,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("carbon.datasource.error");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(307,74) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("back");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(309,62) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("back");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(314,73) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("next");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /ds/scriptViewTabList.jsp(318,70) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("cancel");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }
}
